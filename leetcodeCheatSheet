===( js )===
---hash set---
(https://www.w3schools.com/js/js_object_sets.asp)
new Set()
add()
delete()
has()
clear()
-
forEach()
values()

---map/dict---
(https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map)
const contacts = new Map();
contacts.set("Jessie", { phone: "213-555-1234", address: "123 N 1st Ave" });
contacts.has("Jessie"); // true
contacts.get("Hilary"); // undefined
contacts.set("Hilary", { phone: "617-555-4321", address: "321 S 2nd St" });
contacts.get("Jessie"); // {phone: "213-555-1234", address: "123 N 1st Ave"}
contacts.delete("Raymond"); // false
contacts.delete("Jessie"); // true

Map.prototype.forEach()
Map.prototype.values()

=============================================================

var arr = [];
for (let i = 0; i < 100; i++) {
  arr.push(Math.floor(Math.random() * 100) + 0);
}
arr.sort()
console.log(arr.join(','));
---

// 1
int[] myNumbers = {5, 1, 8, 9};
Array.Sort(myNumbers);

// 2
int myInt = 1337;
string myString = myInt.ToString();
myString[0];

StringBuilder sb = new StringBuilder();
sb.Append(num);
int.Parse(sb.ToString());

// 3
s.Split(' ', StringSplitOptions.RemoveEmptyEntries).Length;

===( Big-O )===
https://aman.ai/code/asymptotic-notations/
https://www.bigocheatsheet.com/

TODO:
https://aman.ai/
https://neetcode.io/practice
https://leetcode.com/list/e97a9e5m/       -- SQL


Speed:
HashSet > List

---List & HashSet---
.Contains() == [false, true]
.Add(<T>)

==============================================
public int Search(int[] nums, int target) {
    int l = 0, r = nums.Length, max = nums.Length;
    while (l <= r)
    {
        int m = (l+r)/2;
        if (m >= max) return -1;
        if (nums[m] == target) return m;
        if (nums[m] < target) l = m + 1;
        else r = m - 1;
    }
    return -1;
}

===( SQL )====================================
SELECT 
    select_list
FROM 
    table_name
WHERE 
    search_condition
GROUP BY 
    group_by_expression
HAVING 
    group_condition;



